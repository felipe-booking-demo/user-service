plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'
}

group = 'io.felipe.bookingdemo'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.apache.commons:commons-lang3:3.14.0'  // ‚úÖ Latest stable version

	// ‚úÖ JUnit 5 dependencies (Cleaned)
	testImplementation 'org.springframework.boot:spring-boot-starter-test'  // Includes JUnit 5
	testImplementation 'org.junit.jupiter:junit-jupiter'  // ‚úÖ Includes API & Engine
	testImplementation 'org.mockito:mockito-core:5.8.0'
	testImplementation 'org.assertj:assertj-core:3.25.3'

}


// üèÉ ‚úÖ Configure JUnit 5 + Test Filtering by Tag
test {
//	useJUnitPlatform()
	useJUnitPlatform()
	// ‚ö° Run tests in parallel
	maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
}

// üìä ‚úÖ JaCoCo Test Coverage
jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		html.required = true
	}
}

tasks.named('test') {
	finalizedBy jacocoTestReport // ‚úÖ Generate coverage report after tests
}